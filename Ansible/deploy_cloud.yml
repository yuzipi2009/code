---
- hosts: FE:LL:DL
  remote_user: kai-user
  become: yes
  become_user: root
  become_method: sudo

  tasks:
  - name: stop service
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/stop_service fe3"
    when: "'FE' in group_names"

  - name: stop service
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/stop_service ll3"
    when: "'LL' in group_names"

  - name: stop service
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/stop_service dl3"
    when: "'DL' in group_names"

  - name: Get PID, if stop successfully, then {{old_process}} is empty
    shell: ps -ef|grep cumulis|grep -v grep|awk '{print $2}'
    register: old_process

  - name: kill cumulis process is still exsit
    shell: "kill -9 {{item}}"
    with_items: "{{old_process.stdout_lines}}"
    when: old_process.stdout != ""
    ignore_errors: yes   #sometime the process is gone but pid is there, so ignore such errors

  - name: check process if they are killed
    wait_for:
      path: "/proc/{{item}}/status"

      state: absent
      msg: "Fialed to kill cumulis process"
    with_items: "{{old_process.stdout_lines}}"
    when: old_process.stdout != ""


  #create directory /dar/var and soft link
  - name: mkdir /dar/var
    file:
      path: "{{var_dir}}"
      owner: cumulis
      group: cumulis
      mode: 0755
      state: directory

  - name: cp and unarchive compiled package to fe/ll/dl
    unarchive:
      src: "{{source_dir}/empowerthings-{{Tags}}.tar.bz2"
      dest: "{{repo_dir}}"
      owner: root
      group: root
      mode: 0755

  - name: override cumulis3.conf file with template
    template:
      src:  cumulis_conf.j2
      dest: "{{repo_dir}}/empowerthings-{{Tags}}/conf/cumulis3.conf"
      owner: root
      group: root
      mode: 0755

  - name: create empowerthings soft link for directory bin/
    file:
      src: "{{repo_dir}}/empowerthings-{{Tags}}/bin"
      dest: "{{var_dir}}/bin"
      owner: cumulis
      group: cumulis
      state: link

  - name: create empowerthings soft link for directory conf/
    file:
      src: "{{repo_dir}}/empowerthings-{{Tags}}/conf"
      dest: "{{var_dir}}/conf"
      owner: cumulis
      group: cumulis
      state: link


  - name: copy keys.json
    copy:
      src: "{{call_dir}}/files/keys.json"
      dest: "{{var_dir}}"
      owner: cumulis
      group: cumulis
      mode: 0644

#  - name: delete keys.json
#    file:
#      path: "{{call_dir}}/files/keys.json"
#      state: absent
#    delegate_to: 127.0.0.1

  - name: start dl
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/start_service.sh dl3 keys.json"
    when: "'DL' in group_names"

  - name: start ll
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/start_service.sh ll3 keys.json"
    when: "'LL' in group_names"

  - name: start fe
    become_user: cumulis
    shell: "cd {{var_dir}} && bin/start_service.sh fe3 keys.json"
    when: "'FE' in group_names"

  #Post check

  - name: Check DL success
    wait_for:
      path: "{{var_dir}}/cumulis_dl3.log"
      search_regex: "listening for incoming requests"
      state: present
      msg: "failed to find 'listening for incoming requests'"
      timeout: 100
    when: "'DL' in group_names"


  - name: Check DL No Error/Exception
    shell: grep Exception "{{var_dir}}/cumulis_dl3.out"
    register: exception_dl
    failed_when: '"Exception" in exception_dl.stdout or "No such file or directory" in exception_dl.stdout' 
    when: "'DL' in group_names"

  - name: Check LL success
    wait_for:
      path: "{{var_dir}}/cumulis_ll3.log"
      search_regex: "Processing regular requests"
      state: present
      msg: "failed to find 'Processing regular requests'"
      timeout: 100
    when: "'LL' in group_names"


  - name: Check LL No Error/Exception
    shell: grep Exception "{{var_dir}}/cumulis_ll3.out"
    register: exception_ll
    failed_when: '"Exception" in exception_ll.stdout or "No such file or directory" in exception_ll.stdout'
    when: "'LL' in group_names"

  - name: Check FE success
    wait_for:
      path: "{{var_dir}}/cumulis_fe3.log"
      search_regex: "Starting services for namespace"
      state: present
      msg: "failed to find 'Starting services for namespace'"
      timeout: 100
    when: "'FE' in group_names"

  - name: Check FE No Error/Exception
    shell: grep Exception "{{var_dir}}/cumulis_fe3.out"
    register: exception_fe
    failed_when: '"Exception" in exception_fe.stdout or "No such file or directory" in exception_fe.stdout'
    when: "'FE' in group_names"